// @ts-ignore
import { mount } from '@vue/test-utils';
import {expect, jest, test} from '@jest/globals';
import Component_example from '../../frontend/src/views/Component_example.vue';
test('allows authenticated user to edit a post', async () => {
    const mockRoute = {
        params: {
            id: 1
        }
    }
    const mockRouter = {
        push: jest.fn()
    }

    const wrapper = mount(Component_example, {
        props: {
            isAuthenticated: true
        },
        global: {
            mocks: {
                $route: mockRoute,
                $router: mockRouter
            }
        }
    })

    await wrapper.find('button').trigger('click')

    expect(mockRouter.push).toHaveBeenCalledTimes(1)
    expect(mockRouter.push).toHaveBeenCalledWith('/posts/1/edit')
})

test('redirect an unauthenticated user to 404', async () => {
    const mockRoute = {
        params: {
            id: 1
        }
    }
    const mockRouter = {
        push: jest.fn()
    }

    const wrapper = mount(Component_example, {
        props: {
            isAuthenticated: false
        },
        global: {
            mocks: {
                $route: mockRoute,
                $router: mockRouter
            }
        }
    })

    await wrapper.find('button').trigger('click')

    expect(mockRouter.push).toHaveBeenCalledTimes(1)
    expect(mockRouter.push).toHaveBeenCalledWith('/404')
})